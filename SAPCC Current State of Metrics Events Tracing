SAPCC Tracing/Events/Metrics - Current State

Metrics:
    Everything should have a prom exporter, and/or does. Prom is the way to collect metrics. [previously we had Monasca/DataDog agent plugins]
    Many things have alert functions, but we use Prom Alert Manager, and disable or don't use any other alert systems. [previously we used Monasca/Storm for alarms]
    Do we use health checks for Kubernetes readiness and liveness probes? How much? [only partially used. Also had quite some issues with readyness/liveness probes destabilizing things]
    
Events/Logs:
    CADF Format used for Openstack 
    Other Events, Not sure of any consistency around format. [notifications used for technical eventing between few OS components, e.g. Designate and Neutron (or was it Nova?) ]
    CNCF working on an open event standard, did not choose CADF:
    [ CNCF is about (change) events, CADF is also covering the specific requirements of auditing ]
        https://github.com/cloudevents/spec
        https://github.com/cloudevents/spec/blob/master/spec.md
        CNCF Serverless WG owns the Spec, intended for more than just log events.
    Metadata: 
        Need to attach project id, and perhaps other metadata to logs. 
        Google uses a metadata service
            https://github.com/GoogleCloudPlatform/google-cloud-go/blob/master/compute/metadata/metadata.go
            Caches look ups.
        Openstack has a Metadata service in Nova (and a proxy in Neutron)
            https://docs.openstack.org/dragonflow/latest/specs/metadata_service.html
            Does not currently have ProjectID
            The Actual service does have it, and sends the header to nova 
                X-Instance-ID: The UUID of the virtual instance
                X-Instance-ID-Signature: A cryptographic signature of the Instance-ID[1]
                X-Tenant-ID: The UUID of the tenant
                X-Forwarded-For: The IP of the virtual instance            
        [ need to understand how the pushing of logs/events is authorized. maybe metadata service can provide credentials
        for a monitoring user with minimal write-only privileges (like Monasca)]
    Scaleability:
        Log-based message broker
        Kafka used by AWS, IBM, Most Cloud Providers
        GKE uses a custom pub/sub that is similar to Nats but more reliable 
            https://nats.io/
            Used by Cloud Foundary 
            Critical Details on Nats from a former Developer
                https://bravenewgeek.com/building-a-distributed-log-from-scratch-part-5-sketching-a-new-system/
        SAPCC does not use a message broker at the moment, and instead points directly to Logstash or Elasticsearch
        [ our previous Monasca logging-as-a-service solution used logstash with a logging API output plugin. Logging
        API authorized and forwarded to Kafka. Logstash pulled from Kafka and pushed to ES. ]
Archiving: 
        Instead of deleting old logs we should use an S3 connector and place them in Swift.
        [billing the customer for the storage consumption, plus inheriting automatic expiry feature (no Wall-E)]
        Compress them to save space wherever possible [inherting from Swift]
    Data Warehouse style Analysis
        Currently we use Elasticsearch
        Vora is an option [ or Presto; key motivation: keep data only in cost-efficient and billable storage (S3) and use
        distributed SQL capabilities to offer structured access to flat-file data ]
          
Tracing: 
    No current tracing models I can see.
    CNCF OpenTracing 
        Consistent, expressive, vendor-neutral APIs for distributed tracing and context propagation
        https://github.com/opentracing/specification/blob/master/specification.md
        
    CNCF Jaeger, a Distributed Tracing System 
        https://github.com/jaegertracing/jaeger
        Native support for OpenTracing
        All Jaeger backend components expose Prometheus metrics by default (other metrics backends are also supported). 
        Logs are written to standard out using the structured logging library zap.
        Jaeger uses Thrift (https://github.com/jaegertracing/jaeger-idl) not gRPC (and Protocol Buffers) [ seems like gRPC
        is not very popular and the future is questionable ]
        No Multi Tenant support at the moment, but it's being discussed.
       
    Openstack Tracing - Implemented by Fabian W 
        https://www.openstack.org/videos/sydney-2017/openstack-osprofiler-ft-cncf-opentracing-distributed-tracing-from-cloud-through-container


System (Control Plane) ->
    Kube-State-Metrics 
        https://github.com/kubernetes/kube-state-metrics
        kube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.
    Prom Node-Exporter
        https://github.com/prometheus/node_exporter
        Prometheus exporter for hardware and OS metrics exposed by *NIX kernels
        Run as a DaemonSet
    Prom NTP Exporter
        https://github.com/sapcc/ntp_exporter
        This is a Prometheus exporter that, when running on a node, checks the drift of that node's clock against a given NTP server.
        Runs as a DaemonSet
    Kube node-problem-detector
        https://github.com/kubernetes/node-problem-detector
        node-problem-detector aims to make various node problems visible to the upstream layers in cluster management stack.
        Runs as a DaemonSet
    SysCtl
        sap/SysCtl
        Runs as a DaemonSet
        Unsure, reseach
    Kube-Sentry
        sapcc/kube-sentry
         https://sentry.$region.cloud.sap/api/0/
    Prometheus-Collector
        It collects and aggregates all metrics of the control plane
        [ reducing the amount of data so that frontend can handle it. Database is on a memory disk and has only 1h retention.
        The P8S way of doing sliding-window transformations without pipeline. ]
    Prometheus-Frontend
        It federates selected and aggregated data from the collector instance and acts as a persistent frontend [ this is 
        the user-facing Prometheus. The other is just the agent and pre-processor. ] 
Openstack     
    Blackbox 
        # All Statsd Prom Exporter (for it's own metrics)
        API 
            performs API checks for Converged Cloud
        Canaries
            performs Canary checks for Converged Cloud
        Certificates
            checks expiry date of SAP Converged Cloud certificates
        DataPath
            performs Datapath checks for Converged Cloud
        Regression 
            performs Regression checks for Converged Cloud
    ELK
        Fluentd
            Fluentd is an open source data collector for unified logging layer.
            [ chosen over logstash because its much better Kubernetes integration. Downside: no transformation capabilities ]    
        https://www.fluentd.org/
            As a DaemonSet
            Stores data Directly to an Elasticsearch/Kibana
            Matches Control Plane containers only (incomplete/wrong list?)
                etc 
                systemd-etc 
                grok

        Logstash Netflow
            The Logstash Netflow module simplifies the collection, normalization, and visualization of network flow data.
            Deployment
                https://github.com/sapcc/helm-charts/blob/master/openstack/elk/templates/logstash-deployment.yaml
            Service:
                https://github.com/sapcc/helm-charts/blob/master/openstack/elk/templates/logstash-service.yaml
        Wall-E
            [ our workhorse for all kinds of cleanup jobs. Now this is called a nanny ]
        Create index patterns, remove based on retention 
        ElasticSearch 
            Storage for these devices
            elasticsearch-exporter for Prom Metrics
            Deletes Indexes over a disk space limit or days retention
            Read Only access to ES/Kibana from Monsoon user, to create dashboards.
    FlameGraph
        #viewing and createing flamegraphs
        flamegraph-collector
            DaemonSet
        flamegraph-viewer
        Storage: Redis  
    Grafana
        Storage: Postgres
        Main Grafana
        Grafana Author to get your Dashboards correct
        Grafana Dev to... Test them before staging? [ for testing new Grafana versions ]
    Hermes
        Openstack Audit Middleware  
            https://github.com/sapcc/openstack-audit-middleware
            OpenStack middleware to produce a CADF audit trail from API calls 
        RabbitMQ
            Pub/Sub for Events
        Logstash
            Pull events, transform, place into Elasticsearch
            Transformations:
                Strip Oslo headers
                Change some CADF Taxonomy issues (Should be in Openstack Audit Middleware)
                Rename initiator user_id to ID 
                Additional CADF tomfoolery
            Output to either Project specific index, or default blob.
        Elasticsearch
            Storage for Events
            Container with Elasticsearch Prom Exporter [ inactive? ]
            Data retention on Space or Time, whichever comes first.
            Rolling time based indexes
        Hermes-api
            API connecting Elasticsearch and Elektra
            Prom Metrics end point
        Wall-E 
            Create and remove Indexes in Elasticsearch based on retention
    Maia
        #Expose Prometheus as multi-tenant OpenStack service
        [ exporters to be moved alongside their respective targets ]
        SNMP-Exporters
            ASR 
            F5
    Openstack-helm
        vCenter-Exporters (WIP)
            Datacenter-Exporters --> prometheus-collector
                vCenter and ESXi version infromation per vCenter datacenter
            Cluster-Exporters --> maia
                Customer Virtual Machine performance metrics per vCenter cluster
                Customer Datastore performance metrics per vCenter cluster


Global
    Cachet 
        Cachet is a beautiful and powerful open source status page system.
        https://github.com/CachetHQ/Cachet
        Storage: Postgres
    Prometheus Alert Manager
        Handles alerts sent by prometheus servers and takes care of deduplicating, grouping, silencing and routing to correct receiver.
        Connects to Slack
        Another level of params matching for Alerts, although contains ALERTS 
        Adds region to source label
        alertmanager.eu-de-1.cloud.sap
        Alerts on Collectors, Federations for Prom connections
        90 Day retention
        Prom alertmanager is stateless and only manages alerts, which are sent by different Promethei.




         








